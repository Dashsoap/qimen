// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  phone     String?  @unique
  inviteCode String? // 注册时使用的邀请码
  
  profile   Profile?
  
  subscription Subscription?
  points      UserPoints?
  
  // 邀请码关联
  usedInviteCodes    InviteCode[] @relation("InviteCodeUsedBy")
  createdInviteCodes InviteCode[] @relation("InviteCodeCreatedBy")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        String   @id @default(uuid())
  userId    String   @unique
  name      String?
  gender    String?
  birthDate DateTime?
  birthTime String?
  birthPlace String?
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Subscription {
  id        String   @id @default(uuid())
  userId    String   @unique
  planType  String   // 'basic' | 'advanced' | 'professional'
  startDate DateTime
  endDate   DateTime
  autoRenew Boolean  @default(false)
  status    String   // 'active' | 'expired' | 'cancelled'
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  paymentHistory PaymentRecord[]
}

model PaymentRecord {
  id             String   @id @default(uuid())
  subscriptionId String
  amount         Float
  currency       String   @default("CNY")
  paymentMethod  String
  status         String   // 'success' | 'failed' | 'pending'
  transactionId  String?
  
  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  
  createdAt      DateTime @default(now())
}

model UserPoints {
  id           String   @id @default(uuid())
  userId       String   @unique
  balance      Int      @default(0)
  totalEarned  Int      @default(0)
  totalSpent   Int      @default(0)
  
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  pointsRecords PointsRecord[]
}

model PointsRecord {
  id           String   @id @default(uuid())
  userPointsId String
  amount       Int
  type         String   // 'earned' | 'spent'
  description  String?
  
  userPoints   UserPoints @relation(fields: [userPointsId], references: [id], onDelete: Cascade)
  
  createdAt    DateTime @default(now())
}

model SmsCode {
  id        String   @id @default(uuid())
  phone     String   @unique
  code      String
  attempts  Int      @default(0)
  expiresAt DateTime
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InviteCode {
  id          String   @id @default(uuid())
  code        String   @unique
  createdBy   String?  // 创建者用户ID，系统生成的为null
  usedBy      String?  // 使用者用户ID
  usedAt      DateTime? // 使用时间
  maxUses     Int      @default(1)  // 最大使用次数
  currentUses Int      @default(0)  // 当前使用次数
  expiresAt   DateTime? // 过期时间，null表示永不过期
  isActive    Boolean  @default(true) // 是否激活
  description String?  // 描述信息
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联使用者
  usedByUser  User?    @relation("InviteCodeUsedBy", fields: [usedBy], references: [id])
  // 关联创建者
  createdByUser User?  @relation("InviteCodeCreatedBy", fields: [createdBy], references: [id])
}